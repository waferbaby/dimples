#!/usr/bin/env ruby
# frozen_string_literal: true

$LOAD_PATH.unshift(File.join(__dir__, '..', 'lib'))

require 'dimples'
require 'dimples/version'
require 'json'
require 'trollop'

trap('SIGINT') do
  puts 'Generation cancelled!'
  exit!
end

valid_commands = %w[build]

options = Trollop.options do
  version "dimples v#{Dimples::VERSION}"
  banner <<-BANNER
A simple static site generator.

Usage:
dimples <#{valid_commands.join('|')}> [options]

Options:
BANNER
  opt :config, 'Config file path', type: :string
  opt :output, 'Destination directory', type: :string
  opt :verbose, 'Verbose mode', default: false
end

Trollop.educate if ARGV.empty?
command = ARGV[0]

unless valid_commands.include?(command)
  Trollop.die "Command must be '#{valid_commands.join('\', \'')}'"
end

plugins_path = File.join(Dir.pwd, 'plugins')
config_path = options[:config] || File.join(Dir.pwd, 'config.json')

if File.exist?(config_path)
  begin
    file_contents = File.read(config_path)
    Trollop.die "Config file is empty (#{config_path})" if file_contents.empty?

    config = JSON.parse(file_contents, symbolize_names: true)
  rescue JSON::ParserError
    Trollop.die "Invalid or malformed config file (#{config_path})"
  end
else
  Trollop.die "Unable to find config file (#{config_path})"
end

if Dir.exist?(plugins_path)
  Dir.glob(File.join(plugins_path, '**', '*.rb')) do |path|
    require path
  end
end

config[:paths][:output] = options[:output] if options[:output]

site = Dimples::Site.new(config)

case command.to_sym
when :build
  puts 'Building site...'

  site.generate

  if site.errors.empty?
    puts "Done! Your site has been built (#{site.paths[:output]})."
  else
    puts 'Generation failed:'
    site.errors.each { |error| puts error }
  end
end
